:root {
    /*Para tener mapeado la paleta de colores que usaras en la web*/
        --blanco: #FFFFFF;
        --oscuro: #000000;
        --secundario: #4b6cb7;
        --primario: rgb(247, 168, 0);
        --gris: #817e7e;


}
html {
    font-size: 62.5%;  /*esto siempre se pone al inicio*/
    box-sizing: border-box; /*ya no va afectar al elemento cuando usemos padding (imagen = 450px paddign: 20px, terminara
    midinedo 450 + 40 del padding. */ 
    /*HACK para Box-Model*/
    scroll-snap-type: y mandatory;  /* <y> porque la web es vertical y el mandatory te lleva por secciones cuando usar scroll*/
}
/*estamos usando esta funcion para poner el border-box a todos, no sabes quien lo necesita pero porsiacaso*/
*,*:before,*:after{   /* el coma es para ahorrar codigo repetido de los clases que tienen la misma funcion*/
    box-sizing: inherit;
}
/*el before y after son seudoelementos, se lo pone para que tambien agrege el border-box
.titulo:after{ content:'Esto va al final'} -> en html no lo puede seleccionar. */
body {
    font-size: 16px; /* 1 rem = 10px*/
    font-family: "proxima-nova", sans-serif;
    background-image: linear-gradient(to top, #DFE9F3 0%, var(--blanco) 100%); /*se agregamos un degradado de fondo, que va de abajo hacia arriba*/
}

h1{
    font-size: 3.8rem;
}
h2{
    font-size: 2.8rem;
}
h3{
    font-size: 1.8rem;
}
h1,h2,h3{
    text-align: center;
    font-family: "proxima-nova", sans-serif;
    font-style: normal;
}
span {
    font-size: 1.6rem;
}

.titulo span {
    text-align: center;
    font-size: 2rem;
    font-family: 'Roboto Condensed', sans-serif;
}
/*Utilidades*/
.w-100{
    width: 100%;
}
@media (min-width: 768px){
    .w-100{
        width: auto;
    }
}
.flex{
    display: flex;
}
.alinear-derecha{
    justify-content: flex-end;
}
.nav-bg{
    background-color: var(--secundario);
}

/*Principal*/
.contenedor{
    max-width: 120rem;  /*antes WIDTH, lo cambiamos a max*/
    margin-top: 0; /*los 4 margin se reducen a margin: 0 auto 0 auto o margin: 0 auto*/
    margin-right: auto;
    margin-bottom: 0;
    margin-left: auto;

}
/*Boton Contactar*/
.boton{
    background-color: var(--secundario);
    color: var(--blanco);  /*color de texto*/
    padding: 1rem 3rem 1rem 3rem;  /*arriba, derecha, abajo, izquierda, como se repiten los valores es 1rem 3rem*/
    margin-top: 1rem;  /*agregar espacio entre el texto de arriba*/
    font-size: 2rem;
    text-decoration: none; /*le quita el subrayado*/
    text-transform: uppercase; /*hace que el texto se mayuscula*/
    font-weight: bold;  /*texto en negrita*/
    border-radius: 0.5rem;  /*borde curveada del boton*/
    width: 100%; /*tamaño del boton horizontal, pero no al 100% de extremo a extremo*/
    text-align: center;
    border: none; /*Quita el borde en caso lo tenga (formulario)*/
}
/*el trabajo del boton de acuerdo al tamaño*/
@media (min-width: 700px) {
    .boton{
        width: auto;
    }
}
.boton:hover{ /*Cuando te colocas sobre cualquier elemento con el puntero se colorea*/
    cursor: pointer; /*Regresa la mano en los botones*/
}

.sombra{
    -webkit-box-shadow: 0px 5px 15px 0px rgba(79,79,79,1);
    -moz-box-shadow: 0px 5px 15px 0px rgba(79,79,79,1);
    box-shadow: 0px 5px 15px 0px rgba(79,79,79,1); /*esto lo sacas de CSS MATIC*/
    background-color: var(--blanco);
    padding: 2rem;
    border-radius: 1rem;
}

.navegacion-principal{
    display: flex;   /*ordenar debajo del otro*/
    flex-direction: column;
    /*align-items: center; /*para alinear de forma vertical*/

}
/*Cuando sea tablet o web la nagecacion sera horizontal */
@media (min-width: 768px){
    .navegacion-principal{
        flex-direction: row;
        justify-content: space-between;  /*espacio entre los textos para alinear de forma horizontal*/
    } 
}

.navegacion-principal a { /*centrar el texto*/
    display: block;
    text-align: center;
    color: var(--blanco);
    text-decoration: none;
    font-size: 2rem; /*modifica el tamaño del texto*/
    font-weight: 700; /* mas negrito el texto*/
    padding: 1rem; /* engrosa */
}

/*es para darle color al puntero*/
.navegacion-principal a:hover{
    background-color: rgb(241, 184, 60);
    color: var(--oscuro);
}

.hero {
    background-image: url(../img/hero.jpg);
    background-repeat: no-repeat;  /*para no repetir la imagen*/
    background-size: cover; /*toma todo el ancho*/
    height: 400px; /* o 45rem*/
   /* padding: 20px;  /*padding es el relleno*/
    position: relative;  /*para que el hijo (contenido-hero) pueda tener posisión absoluta*/
    margin-bottom: 2rem; /*va separar el contenedor blanco de la imagen*/
}

.contenido-hero{
    position: absolute;
    /*coordenadas top, right, bottom(abajo),left*/
    background-color: rgba(0, 0, 0, .7);  /*darle transparencia es el .7 */
    width: 100%;
    height: 100%; /*pero le quitamos el padding al padre(hero), lo que hacemos
    el agregarle una capa de transparencia en toda la imagen, pero el padding afecta */

    /*ESTE CODIGO ES PARA ALINEAR VERTICAL Y HORIZONTALMENTE, SE PUEDE USAR EN TODOS LOS CODIGOS*/
    display: flex; /*si aplicas flex, puedes alinear horizontalmente con justify-content, pero sin cambiar a column en flex-direction*/
    flex-direction: column;
    align-items: center;
    justify-content: center;
    /*si el flex-direc es column, con el align se puede centrar horizontalemnte, y el justify vertixalemnte*/
}

.contenido-hero h2,
.contenido-hero p{
    color: var(--blanco)
}

.icon-ubicacion{
    display: flex; /*en este caso los default lo va en cadena de forma horizontal*/
    align-items: flex-end; /*alinea verticalmente, porque no le hemos cambiando la direcion(flex-direct) a column*/
}

/*Scroll Snap para todos los nagedores, cuando bajas la navegación*/
.servicios,
.navegacion-principal{
    scroll-snap-align: center;
    scroll-snap-stop: always;
}
/*Servicios*/
@media (min-width: 768px){
    .servicios{
        display: grid;  /*al igual que flex -> propiedades de flex-box, ahora nos agrega las propiedades del grid en este caso.*/
        grid-template-columns: 1fr 1fr 1fr; /*deben sumar 100% tmb puede ser(33.3% 33.3% 33.3%) o repeat(3, 1fr)*/
        column-gap: 1rem; /*control total de la separación de las columnas*/
    }
}
/*Se necesita centrar los iconos, por ellos nos vamos al padre que es la clase servicio*/
.servicio{
    display: flex;
    flex-direction: column;
    align-items: center;
}

.servicio h3{
    color: var(--secundario);
    font-weight: normal;
}

.servicio p{
    line-height: 2; /*Texto facil de leer, espacio entre lineas*/
    text-align: center;
}

.servicio .iconos{
    height: 15rem;
    width: 15rem;
    background-color: var(--primario);
    border-radius: 50%;
    display: flex;
    justify-content: space-evenly;
    align-items: center; /*alinear verticalemnte*/

}
/*Contactos*/

.formulario{
    background-color: var(--gris);
    width: min(60rem, 100%); /*Toma el valor mas pequeño, lo compara con el 100% del tamaño actual*/
    margin: 0 auto; /*Utilizar cuando es formulario y cuyo padre no es display flex, centrar horizontalmente*/
    padding: 2rem;
    border-radius: 1rem;
}
.formulario fieldset{
    border: none;   /*Elimina el bordeado que tenia el formulario*/
}

.formulario legend{
    text-align: center;
    font-size: 1.8rem;
    text-transform: uppercase; /*Mayúscula*/
    font-weight: 700; /*Negrita*/
    margin-bottom: 2rem; 
    color:  var(--primario);
}
@media (min-width: 768px){
    .contenedor-campos{
        display: grid;
        grid-template-columns: repeat(2, 1fr);
        grid-template-rows: auto auto 15rem;
        column-gap: 1rem;
    }
}
    .campo:nth-child(3),
    .campo:nth-child(4){   /*nth-child-> en un grupo donde hay cuatros elemento con la misma clase, selecciona por el numero*/
        grid-column: 1 / 3;  /*F12, propiedad grid y veras los etiquetados de numero q son coordenadas, toma toda la fila aunque haya dos columnas hechas antes */
    }

.campo{
    margin-bottom: 1rem;
}
.campo label{
    color: var(--blanco);
    font-weight: bold;
    margin-bottom: .5rem;
    display: block; 
}
.input-text{
    width: 100%;
    border: none;
    padding: 1rem;
    border-radius: .5rem;
}

.footer{
    text-align: center;
}
/* medias querys para celular body{}, tablet 480px, web 768px*/
/*nos podemos llenar de medias querys
por cada modificacion (navegacion, contenedor,etc)*/
/*GRID: */
/* grid: 200px 800px / 300px 300px ES IGUAL -> grid-template-columns: 300px 300px; /*esta propiedad me crea tres(cualquiera) columnas*/
                                                                /* grid-template-rows: 200px 800px;*/

